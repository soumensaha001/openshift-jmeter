$ mkdir -pv /home/student/bin
$ curl -k https://mirror.openshift.com/pub/openshift-v4/clients/helm/latest/helm-linux-amd64 -o /home/student/bin/helm
$ chmod 755 /home/student/bin/helm

# CHECKPOINT
$ helm version
version.BuildInfo{Version:"v3.2.3+4.el8", GitCommit:"2160a65177049990d1b76efc67cb1a9fd21909b1", GitTreeState:"clean", GoVersion:"go1.13.4"}

$ kubectl create serviceaccount --namespace kube-system tiller
kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller

$ helm init
$ kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}'

$ helm repo add oteemo https://oteemo.github.io/charts/
$ helm repo update

# CHECKPOINT:

helm repo list
NAME  	URL                                             
oteemo	https://oteemo.github.io/charts/   

# install sonar qube in the tools namespace
$ oc new-project tools
$ oc create serviceaccount sonarqube -n tools
$ oc adm policy add-scc-to-user anyuid system:serviceaccount:tools:default
$ oc adm policy add-scc-to-user privileged system:serviceaccount:tools:default
$ oc adm policy add-scc-to-user privileged system:serviceaccount:tools:sonarqube

# Run the following command on DTE console to install sonarqube
$ helm install sonarqube oteemo/sonarqube --version 6.6.0

$ edit sonarqube deployment and make it run under the sonarqube service account
$ oc patch deployment/sonarqube-sonarqube --patch '{"spec":{"template":{"spec":{"serviceAccountName": "sonarqube"}}}}'

# CHECKPOINT

$ oc get svc
NAME                            TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
sonarqube-postgresql            ClusterIP   172.21.112.77   <none>        5432/TCP   9s
sonarqube-postgresql-headless   ClusterIP   None            <none>        5432/TCP   9s
sonarqube-sonarqube             ClusterIP   172.21.32.226   <none>        9000/TCP   9s

edit sonarqube deployment and make it run under the sonarqube service account

# Expose the Service
oc expose svc sonarqube-sonarqube

You can now open the URL via the OpenShift Developer Dashboard.

Login as usual an make a project.

The SONARQUBE_URL in boot.sh should look like:
export SONARQUBE_URL='http://sonarqube-sonarqube.tools.svc.cluster.local:9000'


